name: lacework-iac-scan
on:
  push:
    branches:
      - 'main'
  pull_request:
  workflow_dispatch:
permissions:
      id-token: write
      contents: read    
jobs:
  Initialize:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Test Tools
        run: |
          aws --version
          terraform --version
  Lacework-Scan:
    runs-on: ubuntu-latest
    needs: Initialize
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Lacework IaC Scan
        env:
          LW_ACCOUNT: ${{ secrets.LW_ACCOUNT }}
          LW_API_KEY: ${{ secrets.API_KEY }}
          LW_API_SECRET: ${{ secrets.API_SECRET_TOKEN }}
        run: |
             env | grep "GITHUB_\|LW_\|CI_" > env.list
             echo "SCAN_COMMAND=tf-scan" >> env.list
             echo "WORKSPACE=src" >> env.list
             #echo "EXIT_FLAG='Critical'" >> env.list 
             echo "JUNIT_OUTPUT_FILE=/tmp/lacework.junit.xml"  >> env.list
             echo $LW_ACCOUNT
             # cat env.list 
             docker run --env-file env.list -v "$(pwd):/app/src" lacework/codesec-iac:latest
             ls 
             docker ps -a
             CONTAINER_ID=$(docker ps -a |grep lacework |head -n1 |cut -d ' ' -f1)
             docker container cp "$CONTAINER_ID:/tmp/lacework.junit.xml" .
             cat lacework.junit.xml
             docker inspect lacework/codesec-iac:latest
  Terraform-deploy:
    runs-on: ubuntu-latest
    needs: Lacework-Scan
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT}}:role/github-actions
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Sts GetCallerIdentity
        run: |
            aws sts get-caller-identity
      - name: Terraform Plan
        run: |
             terraform init
             terraform plan -out tf.plan
      - name: Terraform Apply
        run: |
          terraform apply --auto-approve tf.plan
