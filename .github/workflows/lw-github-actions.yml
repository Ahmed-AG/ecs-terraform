name: lacework-iac-scan-pr
on:
  push:
    branches:
      - 'main'
  workflow_dispatch:
permissions:
      id-token: write
      contents: read   
      actions: read 
jobs:
  Initialize:
    runs-on: ubuntu-latest
    steps:
      - name: Test Tools
        run: |
          aws --version
          terraform --version
  Lacework-Scanner:
    runs-on: ubuntu-latest
    needs: Initialize
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Lacework IaC Scan
        env:
          LW_ACCOUNT: ${{ secrets.LW_ACCOUNT }}
          LW_API_KEY: ${{ secrets.API_KEY }}
          LW_API_SECRET: ${{ secrets.API_SECRET_TOKEN }}
        run: |
             # Setup 
             IAC_REPORTS_DIR="/tmp/iac_reports"
             env | grep "GITHUB_\|LW_\|CI_" > env.list    # Set Lacework and other secrets
             echo "SCAN_COMMAND=tf-scan" >> env.list      # Configure the scanner to run Terraform Scan
             echo "WORKSPACE=src" >> env.list             
             echo "EXIT_FLAG=critical" >> env.list      # Cause the pipline to fail if any Critical Vulnerbailities are discovered
             echo "JUNIT_OUTPUT_FILE=/tmp/lacework-report.junit.xml"  >> env.list
             echo "JSON_OUTPUT_FILE=/tmp/lacework-report.json"  >> env.list
             
             # Run the Scan
             docker run --env-file env.list -v "$(pwd):/app/src" lacework/codesec-iac:latest
             
             # Copy the report outside lacework/codesec-iac:latest container
             CONTAINER_ID=$(docker ps -a |grep lacework |head -n1 |cut -d ' ' -f1) # Extracts the latest container ID (Inside a pipeline there should be only one anyways)
             mkdir $IAC_REPORTS_DIR
             docker container cp "$CONTAINER_ID:/tmp/lacework-report.json" $IAC_REPORTS_DIR
             docker container cp "$CONTAINER_ID:/tmp/lacework-report.junit.xml" $IAC_REPORTS_DIR

      - name: 'Upload Artifacts'
        uses: actions/upload-artifact@v3
        with:
          name: Lacework Junit Report
          path: /tmp/iac_reports/*
      - name: Publish Lacework Junit Report
        uses: mikepenz/action-junit-report@v4
        with:
          # github-token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '/tmp/iac_reports/lacework-report.junit.xml'     
      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: "Lacework JUnit"
          path: "/tmp/iac_reports/lacework-report.junit.xml"
          reporter: "java-junit"   
  Terraform-Deploy:
    runs-on: ubuntu-latest
    needs: Lacework-Scanner
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT}}:role/github-actions
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Sts GetCallerIdentity
        run: |
            aws sts get-caller-identity
      - name: Terraform Plan
        run: |
             terraform init
             terraform plan -out tf.plan
      - name: Terraform Apply
        run: |
          terraform apply --auto-approve tf.plan
